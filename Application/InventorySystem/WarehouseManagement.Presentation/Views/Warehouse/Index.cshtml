@using WarehouseManagement.Core.ViewModels
@using WarehouseManagement.Core.ViewModels.Common
@model PagedResult<WarehouseListViewModel>
@{
    ViewData["Title"] = "Warehouses";
}

<h2>Warehouses</h2>

<a class="btn btn-primary mb-3" asp-action="Create">+ Add Warehouse</a>

<form method="get" asp-action="Index" class="form-inline mb-3">
    <input type="text" name="search" class="form-control mr-2" placeholder="Search by name" value="@Context.Request.Query["search"]" />

    <select name="status" class="form-control mr-2">
        <option value="">-- Status --</option>
        <option value="Active" selected="@(Context.Request.Query["status"] == "Active")">Active</option>
        <option value="Inactive" selected="@(Context.Request.Query["status"] == "Inactive")">Inactive</option>
    </select>

    <select name="primaryFilter" class="form-control mr-2">
        <option value="">-- Primary --</option>
        <option value="Primary" selected="@(Context.Request.Query["primaryFilter"] == "Primary")">Primary</option>
        <option value="Secondary" selected="@(Context.Request.Query["primaryFilter"] == "Secondary")">Secondary</option>
    </select>

    <button type="submit" class="btn btn-secondary">Filter</button>
</form>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Shipping Address</th>
            <th>Status</th>
            <th>Primary</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var w in Model.Items)
        {
            <tr>
                <td>@w.Name</td>
                <td>@w.ShippingAddress</td>
                <td>@w.Status</td>
                <td>@(w.IsPrimary ? "Yes" : "No")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@w.Id" class="btn btn-sm btn-warning">Edit</a>

                    @if (!w.IsPrimary)
                    {
                        <form asp-action="Delete" asp-route-id="@w.Id" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this warehouse?')">Delete</button>
                        </form>

                        @if (w.Status == "Active")
                        {
                            <form asp-action="SetPrimary" asp-route-id="@w.Id" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-secondary">Set Primary</button>
                            </form>
                        }
                        else
                        {
                            <span class="text-muted">Inactive - cannot set primary</span>
                        }
                    }
                    else
                    {
                        <span class="text-muted">Primary warehouse</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    int maxPageLinks = 7;
    int startPage = Math.Max(1, Model.PageNumber - maxPageLinks / 2);
    int endPage = startPage + maxPageLinks - 1;

    if (endPage > Model.TotalPages)
    {
        endPage = Model.TotalPages;
        startPage = Math.Max(1, endPage - maxPageLinks + 1);
    }

    string search = Context.Request.Query["search"];
    string status = Context.Request.Query["status"];
    string primaryFilter = Context.Request.Query["primaryFilter"];

    Func<int, string> pageUrl = page => Url.Action("Index", new { page, search, status, primaryFilter });

    int pageSize = ViewData["PageSize"] != null ? (int)ViewData["PageSize"] : 10;
    int totalCount = Model.TotalCount;

    int startEntry = (Model.PageNumber - 1) * pageSize + 1;
    int endEntry = Math.Min(Model.PageNumber * pageSize, totalCount);
}

<div class="d-flex justify-content-between align-items-center">

    <div>
        <small>
            Showing @startEntry - @endEntry of @totalCount entries
            &nbsp;&nbsp;|&nbsp;&nbsp;
            Page @Model.PageNumber of @Model.TotalPages
        </small>
    </div>

    <nav aria-label="Page navigation">
        <ul class="pagination mb-0">
            <!-- First Page -->
            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                <a class="page-link" href="@(Model.PageNumber == 1 ? "#" : pageUrl(1))" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                    <span class="sr-only">First</span>
                </a>
            </li>

            <!-- Previous Page -->
            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                <a class="page-link" href="@(Model.PageNumber == 1 ? "#" : pageUrl(Model.PageNumber - 1))" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>

            @if (startPage > 1)
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@(i == Model.PageNumber ? "#" : pageUrl(i))">@i</a>
                </li>
            }

            @if (endPage < Model.TotalPages)
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
            }

            <!-- Next Page -->
            <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@(Model.PageNumber == Model.TotalPages ? "#" : pageUrl(Model.PageNumber + 1))" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>

            <!-- Last Page -->
            <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@(Model.PageNumber == Model.TotalPages ? "#" : pageUrl(Model.TotalPages))" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                    <span class="sr-only">Last</span>
                </a>
            </li>
        </ul>
    </nav>
</div>

