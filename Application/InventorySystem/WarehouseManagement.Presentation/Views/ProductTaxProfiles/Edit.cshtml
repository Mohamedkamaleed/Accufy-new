@using WarehouseManagement.Core.ViewModels
@model ProductTaxProfileEditViewModel
@{
    var products = ViewBag.Products as List<SelectListItem>;
    var taxProfiles = ViewBag.TaxProfiles as List<SelectListItem>;
    var selectedProduct = products?.FirstOrDefault(p => p.Value == Model.ProductID.ToString())?.Text;
    var selectedTaxProfile = taxProfiles?.FirstOrDefault(t => t.Value == Model.TaxProfileID.ToString())?.Text;
}

<div class="container mt-4">
    <h2>Edit Product Tax Profile</h2>

    <form asp-action="Edit" method="post">
        <input type="hidden" asp-for="ProductID" />
        <input type="hidden" asp-for="TaxProfileID" />

        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label class="form-label">Product</label>
                    <input class="form-control" value="@selectedProduct" readonly />
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label class="form-label">Tax Profile</label>
                    <input class="form-control" value="@selectedTaxProfile" readonly />
                </div>
            </div>
        </div>


        <div class="form-group mb-3">
            <div class="form-check">
                <input asp-for="IsPrimary" class="form-check-input" />
                <label asp-for="IsPrimary" class="form-check-label"></label>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Update</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}